
==================== FINAL INTERFACE ====================
2017-12-04 17:08:37.566319 UTC

interface DFS-0.1.0.0-8jVWvB4mTg1IUkCEEYmdc9:FileServer 8002
  interface hash: daa40f8b024f66026cf63ed7e2b23102
  ABI hash: 8fb58528e517f962f8d266fc88b25fa1
  export-list hash: 44ad35b634f7acd870d3ed4e2dd8bc64
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9f824abc175ef353d85c18036ab74a85
  sig of: Nothing
  used TH splices: False
  where
exports:
  FileServer.add
  FileServer.addToFileListRead
  FileServer.addToFileListWrite
  FileServer.checkVer
  FileServer.newFile
  FileServer.newServer
  FileServer.openFileandSend
  FileServer.openFileandSend'
  FileServer.openSocket
  FileServer.removeClientfromCacheList
  FileServer.runConn
  FileServer.updateClientCache
  FileServer.writeFileList
  FileServer.writeFileandClose
  FileServer.CachedBy
  FileServer.File{FileServer.File cachedBy fileVersion}
  FileServer.FileList
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.Fix 1847625fb543f2f5c2510a02760c6b1a
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD bf0291e0f2b6c0eca5446f986999f1cc
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.IO.IOMode 2f5782f93b12a0d860d6d661b9fb405c
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network e1c2bc629a33bc735be38b505b5877ff
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Internal 9f052186d90733a29fe9bf6bf8921c1c
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
a9fe98fec4066407dbb448aaccf2d94f
  $sdelete_$sgo10 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
2da549aba9e5bb53baaecb15fae4c358
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
e59278379eda266d82e57de09cf9191d
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
f5fd832b553b3471affe577c111eebd1
  $tc'File :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5704379000045370239##
                   15532876458679974698##
                   FileServer.$trModule
                   FileServer.$tc'File1) -}
ee014d8717a32cd383048da269de43dc
  $tc'File1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'File"#) -}
d8c9368cbcf4b1819e133ddaac128094
  $tcFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6617842079838295278##
                   3709925000491039817##
                   FileServer.$trModule
                   FileServer.$tcFile1) -}
1f7e27e08f0205eeb6c77e8a8be19639
  $tcFile1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "File"#) -}
ddaa4d97501a48fb64d93a3884a83a90
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   FileServer.$trModule2
                   FileServer.$trModule1) -}
7ae1b74d4eef2704d340ec6baa12abf2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileServer"#) -}
a7ebd9a43286dd639dd8b5499a0dd992
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-8jVWvB4mTg1IUkCEEYmdc9"#) -}
8f9981f6fe821db0f14bcc9a9301b91e
  $waddToFileListRead ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,U><S,1*U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ GHC.Types.Bool
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1 @ FileServer.File w1 ipv1 of wild {
                      GHC.Base.Nothing
                      -> case FileServer.addToFileListRead2
                         ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                         of {}
                      GHC.Base.Just aFile
                      -> case aFile of wild1 { FileServer.File ds ds2 ->
                         case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                tvar#
                                ipv of ds3 { (#,#) ipv2 ipv3 ->
                         case FileServer.$slookup1
                                @ GHC.IO.Handle.Types.Handle
                                w2
                                ipv3 of wild3 {
                           GHC.Base.Nothing
                           -> case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ (Data.Map.Base.Map
                                          GHC.Base.String GHC.IO.Handle.Types.Handle)
                                     tvar#
                                     (FileServer.$sinsert_$sgo10
                                        @ GHC.IO.Handle.Types.Handle
                                        w2
                                        w
                                        ipv3)
                                     ipv2 of s2# { DEFAULT ->
                              (# s2#, GHC.Types.True #) }
                           GHC.Base.Just aClient -> (# ipv2, GHC.Types.True #) } } } } } })
                   w3) -}
a711c90595247eb2207a21ef3496bb01
  $waddToFileListWrite ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1 @ FileServer.File w1 ipv1 of wild {
                      GHC.Base.Nothing
                      -> case GHC.Prim.newTVar#
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                @ GHC.Prim.RealWorld
                                (FileServer.$sinsert_$sgo10
                                   @ GHC.IO.Handle.Types.Handle
                                   w2
                                   w
                                   (Data.Map.Base.Tip
                                      @ GHC.Base.String
                                      @ GHC.IO.Handle.Types.Handle))
                                ipv of ds { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.newTVar#
                                @ GHC.Types.Int
                                @ GHC.Prim.RealWorld
                                FileServer.addToFileListWrite2
                                ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv5
                                ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv5
                                (case ipv7 of wild1 { GHC.Types.I# y ->
                                 GHC.Types.I# (GHC.Prim.+# 1# y) })
                                ipv6 of s2# { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                                ww
                                (FileServer.$sinsert_$sgo10
                                   @ FileServer.File
                                   w1
                                   (FileServer.File
                                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv5)
                                      (GHC.Conc.Sync.TVar
                                         @ (Data.Map.Base.Map
                                              GHC.Base.String GHC.IO.Handle.Types.Handle)
                                         ipv3))
                                   ipv1)
                                s2# of s2#1 { DEFAULT ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                ipv3
                                s2#1 of ds4 { (#,#) ipv8 ipv9 ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                ipv3
                                (FileServer.$sinsert_$sgo10 @ GHC.IO.Handle.Types.Handle w2 w ipv9)
                                ipv8 of s2#2 { DEFAULT ->
                         (# s2#2, GHC.Tuple.() #) } } } } } } }
                      GHC.Base.Just aFile
                      -> case aFile of wild1 { FileServer.File ds ds2 ->
                         case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                tvar#
                                ipv of ds3 { (#,#) ipv2 ipv3 ->
                         case FileServer.$slookup1
                                @ GHC.IO.Handle.Types.Handle
                                w2
                                ipv3 of wild3 {
                           GHC.Base.Nothing
                           -> case ds of wild4 { GHC.Conc.Sync.TVar tvar#1 ->
                              case GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#1
                                     ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#1
                                     (case ipv5 of wild5 { GHC.Types.I# y ->
                                      GHC.Types.I# (GHC.Prim.+# 1# y) })
                                     ipv4 of s2# { DEFAULT ->
                              case GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#1
                                     s2# of ds5 { (#,#) ipv6 ipv7 ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ (Data.Map.Base.Map
                                          GHC.Base.String GHC.IO.Handle.Types.Handle)
                                     tvar#
                                     (FileServer.$sinsert_$sgo10
                                        @ GHC.IO.Handle.Types.Handle
                                        w2
                                        w
                                        ipv3)
                                     ipv6 of s2#1 { DEFAULT ->
                              (# s2#1, GHC.Tuple.() #) } } } } }
                           GHC.Base.Just aClient
                           -> case ds of wild4 { GHC.Conc.Sync.TVar tvar#1 ->
                              case GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#1
                                     ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#1
                                     (case ipv5 of wild5 { GHC.Types.I# y ->
                                      GHC.Types.I# (GHC.Prim.+# 1# y) })
                                     ipv4 of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } } } } } } } })
                   w3) -}
c25f0ffbea093dabd27aeb7eed20d548
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,A>b, Inline: [0] -}
d295781817ee4b8f97a59fd7e5050866
  $wopenFileandSend ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.$waddToFileListRead
                        w
                        w1
                        ww
                        w2
                        w3 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Types.False
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             FileServer.openFileandSend_reply
                             GHC.Types.True
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      GHC.IO.Handle.Text.hPutStr2
                        w
                        FileServer.openFileandSend_reply
                        GHC.Types.True
                        ipv2 }
                   GHC.Types.True
                   -> case GHC.IO.Handle.FD.openFile1
                             w1
                             GHC.IO.IOMode.ReadMode
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.IO.Handle.Text.hGetContents1
                             ipv3
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.CString.unpackAppendCString# "File contents are: \n"# ipv5)
                             GHC.Types.True
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      GHC.IO.Handle.Text.hPutStr2
                        w
                        (GHC.Base.++ @ GHC.Types.Char ipv5 FileServer.openFileandSend2)
                        GHC.Types.True
                        ipv6 } } } } }) -}
c29a6cff2107f28eb3b91bf5eb7d543a
  $wopenFileandSend' ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        w
                        (GHC.CString.unpackAppendCString# "UPDATE "# w1)
                        GHC.Types.True
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        w
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case Data.OldList.words ipv3 of wild {
                   [] -> FileServer.$wfail ipv2
                   : ds ds3
                   -> case GHC.Base.eqString
                             ds
                             FileServer.openFileandSend'2 of wild1 {
                        GHC.Types.False -> FileServer.$wfail ipv2
                        GHC.Types.True
                        -> case ds3 of wild2 {
                             []
                             -> case GHC.IO.Handle.FD.openFile1
                                       w1
                                       GHC.IO.IOMode.ReadMode
                                       ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                case GHC.IO.Handle.Text.hGetContents1
                                       ipv5
                                       ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                case GHC.IO.Handle.Text.hPutStr2
                                       GHC.IO.Handle.FD.stdout
                                       (GHC.CString.unpackAppendCString#
                                          "Updated file contents are: \n"#
                                          ipv7)
                                       GHC.Types.True
                                       ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                                GHC.IO.Handle.Text.hPutStr2
                                  w
                                  (GHC.Base.++ @ GHC.Types.Char ipv7 FileServer.openFileandSend2)
                                  GHC.Types.True
                                  ipv8 } } }
                             : ipv4 ipv5 -> FileServer.$wfail ipv2 } } } } }) -}
6e675f59673cfa40c21a1561e64dafad
  $wremoveClientfromCacheList ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                      GHC.Base.Nothing
                      -> case FileServer.removeClientfromCacheList3
                         ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                         of {}
                      GHC.Base.Just aFile
                      -> case aFile of wild1 { FileServer.File ds ds2 ->
                         case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                tvar#
                                ipv of ds3 { (#,#) ipv2 ipv3 ->
                         case FileServer.$slookup1
                                @ GHC.IO.Handle.Types.Handle
                                w1
                                ipv3 of wild3 {
                           GHC.Base.Nothing
                           -> case FileServer.removeClientfromCacheList2
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              of {}
                           GHC.Base.Just aClient
                           -> case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ (Data.Map.Base.Map
                                          GHC.Base.String GHC.IO.Handle.Types.Handle)
                                     tvar#
                                     (FileServer.$sdelete_$sgo10
                                        @ GHC.IO.Handle.Types.Handle
                                        w1
                                        ipv3)
                                     ipv2 of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } } } } } })
                   w2) -}
7653a993bd4aa2e80f6062e75402c0ca
  $wrunConn ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U(U)><S,U>, Inline: [0] -}
5b795675ee7edbb642b534005dc8d743
  $wupdateClientCache ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           eta)
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                   GHC.Base.Nothing
                   -> case FileServer.updateClientCache3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Base.Just aFile
                   -> case GHC.Prim.atomically#
                             @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case aFile of wild1 { FileServer.File ds ds2 ->
                              case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                                tvar#
                                eta } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      letrec {
                        go10 :: GHC.Types.IO ()
                                -> Data.Map.Base.Map [GHC.Types.Char] GHC.IO.Handle.Types.Handle
                                -> GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 3, Strictness: <L,1*C1(U(U,U))><S,1*U><S,U> -}
                        = \ (z' :: GHC.Types.IO ())
                            (ds :: Data.Map.Base.Map
                                     [GHC.Types.Char] GHC.IO.Handle.Types.Handle)
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds of wild1 {
                            Data.Map.Base.Bin dt kx x l r
                            -> go10
                                 (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                  case FileServer.$wopenFileandSend'
                                         x
                                         w
                                         eta1 of ds3 { (#,#) ipv4 ipv5 ->
                                  go10 z' r ipv4 })
                                   `cast`
                                 (Sym (GHC.Types.N:IO[0] <()>_R))
                                 l
                                 eta
                            Data.Map.Base.Tip -> z' `cast` (GHC.Types.N:IO[0] <()>_R) eta }
                      } in
                      go10
                        FileServer.updateClientCache2
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R))
                        (FileServer.$sdelete_$sgo10 @ GHC.IO.Handle.Types.Handle w1 ipv3)
                        ipv2 } } }) -}
fecc628898b495ebddde3b5fcc36c5a4
  $wwriteFileList ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U><S,U><L,1*U><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.$waddToFileListWrite
                        w
                        w1
                        ww
                        w3
                        w4 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.writeFileList2
                        w1
                        w2
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case FileServer.$wupdateClientCache
                        ww
                        w1
                        w3
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
386eb78547ca83a721b0d4125416a7cc
  type CachedBy =
    GHC.Conc.Sync.TVar
      (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
168246bc093287bce8a16070ba1e7846
  data File
    = File {fileVersion :: GHC.Conc.Sync.TVar GHC.Types.Int,
            cachedBy :: FileServer.CachedBy}
717411549f2366710f3eef1828babf97
  type FileList =
    GHC.Conc.Sync.TVar
      (Data.Map.Base.Map GHC.Base.String FileServer.File)
06c14a74b19e8a94fe14b62e9ed67124
  add :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True) GHC.Num.$fNumInt_$c+ -}
c3369165000c2df96242a0d1e515f1aa
  addToFileListRead ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 5, Strictness: <L,U><S,1*U><S(S),1*U(U)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListRead1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
005dc82a1889b73287ede81beb16232f
  addToFileListRead1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,U><S,1*U><S(S),1*U(U)><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$waddToFileListRead w w1 ww1 w3 w4 }) -}
5621a717a9cd076bd91d4456e0e3e861
  addToFileListRead2 :: GHC.Conc.Sync.STM GHC.Prim.Any
  {- Strictness: x -}
493f36c44dab55ac48bf4d38aa0a1388
  addToFileListWrite ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,U><S,U><S(S),1*U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListWrite1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5b61ed51b5eac4cf855f821179b1050f
  addToFileListWrite1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S,U><S(S),1*U(U)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$waddToFileListWrite w w1 ww1 w3 w4 }) -}
1bbb930f29a96a8f9f15902fafb49154
  addToFileListWrite2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
0acd993d8d57dc6bef2a73060daaa99d
  cachedBy :: FileServer.File -> FileServer.CachedBy
  RecSel Left FileServer.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: FileServer.File) ->
                 case ds of wild { FileServer.File ds1 ds2 -> ds2 }) -}
74a42648815b13357bd1e4693531d4b6
  checkVer ::
    GHC.Base.String
    -> FileServer.FileList -> GHC.Types.IO GHC.Types.Int
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.checkVer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
996f522f3c4fad88bcef1c5d3ebf421c
  checkVer1 ::
    GHC.Base.String
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (fileName :: GHC.Base.String)
                   (fileList :: FileServer.FileList)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ GHC.Types.Int
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case fileList of wild { GHC.Conc.Sync.TVar tvar# ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           tvar#
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1
                           @ FileServer.File
                           fileName
                           ipv1 of wild1 {
                      GHC.Base.Nothing -> (# ipv, FileServer.addToFileListWrite2 #)
                      GHC.Base.Just aFile
                      -> case aFile of wild2 { FileServer.File ds ds2 ->
                         case ds of wild3 { GHC.Conc.Sync.TVar tvar#1 ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ GHC.Types.Int
                           tvar#1
                           ipv } } } } })
                   eta) -}
3296b57de7c68a0a6222d06f6a485c57
  fileVersion :: FileServer.File -> GHC.Conc.Sync.TVar GHC.Types.Int
  RecSel Left FileServer.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: FileServer.File) ->
                 case ds of wild { FileServer.File ds1 ds2 -> ds1 }) -}
181d183c58bd89fbb063b202927ac3e4
  newFile ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Conc.Sync.STM FileServer.File
  {- Arity: 4, Strictness: <L,U><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newFile1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <FileServer.File>_R)) -}
04d55ec97cca0ae1dacafc31fde9bd34
  newFile1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.File #)
  {- Arity: 4, Strictness: <L,U><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (handle :: GHC.IO.Handle.Types.Handle)
                   (fileName :: GHC.Base.String)
                   (clientName :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                        @ GHC.Prim.RealWorld
                        (FileServer.$sinsert_$sgo10
                           @ GHC.IO.Handle.Types.Handle
                           clientName
                           handle
                           (Data.Map.Base.Tip @ GHC.Base.String @ GHC.IO.Handle.Types.Handle))
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        FileServer.addToFileListWrite2
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    FileServer.File
                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv3)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Base.String GHC.IO.Handle.Types.Handle)
                         ipv1) #) } }) -}
37a2e7b812d2154f2cc5a9f8be5c2f9b
  newServer :: GHC.Types.IO FileServer.FileList
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newServer1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Base.String FileServer.File)>_R)) -}
9fed6a516901a7717b3223b32e2dc9d1
  newServer1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar
            (Data.Map.Base.Map GHC.Base.String FileServer.File) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1# :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Base.String @ FileServer.File)
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Conc.Sync.TVar
                      @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                      ipv1 #) }) -}
2bdfbbe7cdcaf63bca564385fb01d8e8
  openFileandSend ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,U><S(S),1*U(U)><S,U><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openFileandSend1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
70d3600c34079f8875acd960e6fd380a
  openFileandSend' ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,U><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openFileandSend'1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
96a790a1fd3f9668b6427297155f24d5
  openFileandSend'1 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,A><L,U><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 FileServer.$wopenFileandSend' w w2 w3) -}
af47411dc25480281fc4805d0c91cd9c
  openFileandSend'2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "READY"#) -}
eaa4a1391a7fa3a87560ccc9bb311fcf
  openFileandSend1 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S(S),1*U(U)><S,U><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wopenFileandSend w ww1 w2 w3 w4 }) -}
d8ee85a5fd20b5fdeca0b3d8b4c53197
  openFileandSend2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \!EOF!"#) -}
05ba4e9b4a3afd53d1898e57c8d449c8
  openFileandSend_reply :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "That file does not exist"#) -}
ed2788dd3bf74cf4446239c8a46d3f03
  openSocket :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openSocket1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fff3d18ff2b5ed94be585c197de1efc9
  openSocket1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: (\ (portNum :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.listenOn1
                        (Network.PortNumber
                           (case portNum of wild { GHC.Types.I# i ->
                            case {__pkg_ccall network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz htons GHC.Prim.Word#
                                                                                                           -> GHC.Prim.State#
                                                                                                                GHC.Prim.RealWorld
                                                                                                           -> (# GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                 GHC.Prim.Word# #)}
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# i))
                                   GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                            (GHC.Word.W16# (GHC.Prim.narrow16Word# ds1))
                              `cast`
                            (Sym (Network.Socket.Types.N:PortNumber[0])) } }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Base.String @ FileServer.File)
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        FileServer.openSocket3
                        GHC.Types.True
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 letrec {
                   a' :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ipv1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                     case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                     case Network.$waccept
                            ww1
                            ww2
                            ww3
                            ww4
                            ww7
                            s1 of ds3 { (#,#) ipv6 ipv7 ->
                     case ipv7 of wild { (,,) handle host port ->
                     case GHC.IO.Handle.Text.hPutStr2
                            GHC.IO.Handle.FD.stdout
                            (GHC.CString.unpackAppendCString#
                               "Connection accepted: "#
                               (GHC.Base.++ @ GHC.Types.Char host FileServer.openSocket2))
                            GHC.Types.True
                            ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                     case Control.Concurrent.forkFinally1
                            @ ()
                            (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             FileServer.$wrunConn
                               handle
                               (GHC.Conc.Sync.TVar
                                  @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                                  ipv3)
                               w)
                              `cast`
                            (Sym (GHC.Types.N:IO[0] <()>_R))
                            (\ (ds5 :: Data.Either.Either GHC.Exception.SomeException ())
                               (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             GHC.IO.Handle.hClose1 handle eta)
                              `cast`
                            (<Data.Either.Either GHC.Exception.SomeException ()>_R
                             ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                            ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                     a' ipv10 } } } } } }
                 } in
                 a' ipv4 } } }) -}
58ec3b290e44bbc9dabef5ba53b325bf
  openSocket2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
7a3495e28bfd49ddc8099efd5e1ef7f2
  openSocket3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Waiting for connections\n"#) -}
f2a837a910486f98f982693b7eca895c
  removeClientfromCacheList ::
    GHC.Base.String
    -> GHC.Base.String -> FileServer.FileList -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,1*U><S,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.removeClientfromCacheList1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
fc1066635951050d6eec29419069a427
  removeClientfromCacheList1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><S,U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wremoveClientfromCacheList w w1 ww1 w3 }) -}
068877dbec5e42e5abf09788f8bbbda8
  removeClientfromCacheList2 :: GHC.Conc.Sync.STM ()
  {- Strictness: x -}
34297041988a56f79061e428f93e7037
  removeClientfromCacheList3 :: GHC.Conc.Sync.STM ()
  {- Strictness: x -}
e7e88db98e8d2102312f56c7389273aa
  runConn ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.runConn1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
dc07dabb8e072a3169b63d133fbe24e7
  runConn1 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 FileServer.$wrunConn w w1 w3) -}
577b429436ae0b29bf2b96837839e481
  updateClientCache ::
    FileServer.FileList
    -> GHC.Base.String -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S(S),1*U(U)><S,U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.updateClientCache1
                  `cast`
                (<FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a1dcc385e5e26f3dc3048674008d7151
  updateClientCache1 ::
    FileServer.FileList
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S(S),1*U(U)><S,U><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: FileServer.FileList)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wupdateClientCache ww1 w1 w2 w3 }) -}
b594b48352d9a42684e541dc71032288
  updateClientCache2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
1758c0400dc12fbc70bfb33cc55b54fb
  updateClientCache3 :: GHC.Types.IO ()
  {- Strictness: x -}
3a56ca2400dff9a60c1cad208f003b3c
  writeFileList ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Types.IO ()
  {- Arity: 6, Strictness: <L,U><S,U><L,1*U><L,U><S(S),U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.writeFileList1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0ba1c2c330875fb15649bfcebf8f4f88
  writeFileList1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U><S,U><L,1*U><L,U><S(S),U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Base.String)
                   (w4 :: FileServer.FileList)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w4 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wwriteFileList w w1 w2 w3 ww1 w5 }) -}
8ce256d710f6b2daf6bfb8c3759d8d84
  writeFileList2 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U><S,U>,
     Unfolding: (\ (fileName :: GHC.Base.String)
                   (toWrite :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        fileName
                        GHC.IO.IOMode.WriteMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        ipv1
                        toWrite
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   FileServer.writeFileList3
                   GHC.Types.True
                   ipv4 } } }) -}
08ed6461bc9145c8625136fd24654e8d
  writeFileList3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Written to file"#) -}
73e92e56e3bbe267cd46b84f52322c27
  writeFileandClose ::
    GHC.Base.String -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.writeFileList2
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

