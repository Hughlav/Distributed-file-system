
==================== FINAL INTERFACE ====================
2017-12-14 13:57:14.699679 UTC

interface DFS-0.1.0.0-7idFxpKHsOVL8Ht6XDP4lR:FileServer 8002
  interface hash: 72ea1fd52226bdb5d1fa854d953a91a9
  ABI hash: f37edf1eb958191e4d3902867a11473e
  export-list hash: 6188abf936d0206de9f04215c2f8542d
  orphan hash: 6846b5ff1b10b727477bc464736f48fb
  flag hash: 9f824abc175ef353d85c18036ab74a85
  sig of: Nothing
  used TH splices: False
  where
exports:
  FileServer.add
  FileServer.addClientToTxt
  FileServer.addToFileListRead
  FileServer.addToFileListWrite
  FileServer.checkVer
  FileServer.createTxtForInit
  FileServer.initServer
  FileServer.newFile
  FileServer.newFile'
  FileServer.newServer
  FileServer.openFileandSend
  FileServer.openFileandSend'
  FileServer.openSocket
  FileServer.populateList
  FileServer.readytoclose
  FileServer.removeClientToTxt
  FileServer.removeClientfromCacheList
  FileServer.runConn
  FileServer.updateClientCache
  FileServer.writeFileList
  FileServer.writeFileandClose
  FileServer.CachedBy
  FileServer.File{FileServer.File cachedBy fileVersion}
  FileServer.FileList
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.Fix 1847625fb543f2f5c2510a02760c6b1a
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD bf0291e0f2b6c0eca5446f986999f1cc
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.IO.IOMode 2f5782f93b12a0d860d6d661b9fb405c
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network e1c2bc629a33bc735be38b505b5877ff
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket 52f9b9614bf018ecf5fec5f2570dad23
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Internal 9f052186d90733a29fe9bf6bf8921c1c
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Types 2eb8a83dc42cc86a12e652ce3294cbda
import  -/  split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT:Data.List.Split 272c5cfa667e04d85d90f02a3d135474
import  -/  split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT:Data.List.Split.Internals be3228c161b442fb4a76d9ed8518c1ed
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
a3b47edec370c6a7d30b2381835a51b3
  $sinsert_$sgo10 ::
    GHC.Base.String
    -> a1
    -> Data.Map.Base.Map GHC.Base.String a1
    -> Data.Map.Base.Map GHC.Base.String a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
06c3bbc4ce58ef8e8a78e4c5efb7731c
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b1dec6a21a7c18af601b277efd136499
  $sread :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither
                        @ GHC.Types.Int
                        GHC.Read.$fReadInt
                        s of wild {
                   Data.Either.Left x
                   -> GHC.Err.errorWithoutStackTrace
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        x
                   Data.Either.Right y -> y }) -}
c3d85918440b950a5df73c702236a3e0
  $tc'File :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9737766990513117448##
                   1145967356608327843##
                   FileServer.$trModule
                   FileServer.$tc'File1) -}
ed936237bdc0fd9a46ded8ecf093f99c
  $tc'File1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'File"#) -}
4efbd28de3e749979833f5d5cf2d23fa
  $tcFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4035830236881879807##
                   3228353308916310187##
                   FileServer.$trModule
                   FileServer.$tcFile1) -}
44ac30d3e3403239f95e46a6c05c3f6f
  $tcFile1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "File"#) -}
a71e25842b3bf83d7a63e679a4cbed4f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   FileServer.$trModule2
                   FileServer.$trModule1) -}
a97164765d6ad65a4d7f1f36a23849a0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FileServer"#) -}
93a95ec4afd17ac5c70f8b4cd344ae93
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "DFS-0.1.0.0-7idFxpKHsOVL8Ht6XDP4lR"#) -}
a02b9b207deda0717c8b15e5996557fc
  $waddToFileListRead ::
    GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, Strictness: <S,U><S,U><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           eta)
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                   GHC.Base.Nothing
                   -> case FileServer.addToFileListRead3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                      of {}
                   GHC.Base.Just aFile
                   -> case GHC.Prim.atomically#
                             @ [GHC.Types.Int]
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case aFile of wild1 { FileServer.File ds ds2 ->
                              case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ [GHC.Types.Int]
                                tvar#
                                eta } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.List.elem
                             @ GHC.Types.Int
                             GHC.Classes.$fEqInt
                             w1
                             ipv3 of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.atomically#
                                  @ ()
                                  (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case aFile of wild2 { FileServer.File ds ds3 ->
                                   case ds3 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                                   case GHC.Prim.writeTVar#
                                          @ GHC.Prim.RealWorld
                                          @ [GHC.Types.Int]
                                          tvar#
                                          (case Data.OldList.$winsertBy
                                                  @ GHC.Types.Int
                                                  GHC.Classes.compareInt
                                                  w1
                                                  ipv3 of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Types.: @ GHC.Types.Int ww2 ww3 })
                                          eta of s2# { DEFAULT ->
                                   (# s2#, GHC.Tuple.() #) } } })
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case FileServer.addClientToTxt1
                                  w
                                  w1
                                  ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                           case GHC.IO.Handle.Text.hPutStr2
                                  GHC.IO.Handle.FD.stdout
                                  FileServer.addToFileListRead2
                                  GHC.Types.True
                                  ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                           (# ipv8, GHC.Types.True #) } } }
                        GHC.Types.True -> (# ipv2, GHC.Types.True #) } } } }) -}
d9e2a21e5a268b3e8aabe67992f55b45
  $waddToFileListWrite ::
    GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><S,U><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           eta)
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                   GHC.Base.Nothing
                   -> case GHC.Prim.atomically#
                             @ FileServer.File
                             (FileServer.addToFileListWrite3 w w1)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.atomically#
                             @ ()
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case ipv3 of wild1 { FileServer.File ds ds3 ->
                              case ds of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              case GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#
                                     eta of ds4 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#
                                     (case ipv5 of wild3 { GHC.Types.I# y ->
                                      GHC.Types.I# (GHC.Prim.+# 1# y) })
                                     ipv4 of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.atomically#
                             @ ()
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                                     ww
                                     (FileServer.$sinsert_$sgo10 @ FileServer.File w ipv3 ipv1)
                                     eta of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) })
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      FileServer.addToFileListWrite2 w w1 ipv6 } } }
                   GHC.Base.Just aFile
                   -> case GHC.Prim.atomically#
                             @ [GHC.Types.Int]
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case aFile of wild1 { FileServer.File ds ds2 ->
                              case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ [GHC.Types.Int]
                                tvar#
                                eta } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.List.elem
                             @ GHC.Types.Int
                             GHC.Classes.$fEqInt
                             w1
                             ipv3 of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.atomically#
                                  @ ()
                                  (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case aFile of wild2 { FileServer.File ds ds3 ->
                                   case ds of wild3 { GHC.Conc.Sync.TVar tvar# ->
                                   case GHC.Prim.readTVar#
                                          @ GHC.Prim.RealWorld
                                          @ GHC.Types.Int
                                          tvar#
                                          eta of ds4 { (#,#) ipv4 ipv5 ->
                                   case GHC.Prim.writeTVar#
                                          @ GHC.Prim.RealWorld
                                          @ GHC.Types.Int
                                          tvar#
                                          (case ipv5 of wild4 { GHC.Types.I# y ->
                                           GHC.Types.I# (GHC.Prim.+# 1# y) })
                                          ipv4 of s2# { DEFAULT ->
                                   (# s2#, GHC.Tuple.() #) } } } })
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case GHC.Prim.atomically#
                                  @ GHC.Types.Int
                                  (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case aFile of wild2 { FileServer.File ds ds4 ->
                                   case ds of wild3 { GHC.Conc.Sync.TVar tvar# ->
                                   GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#
                                     eta } })
                                  ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                           case GHC.Prim.atomically#
                                  @ ()
                                  (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case aFile of wild2 { FileServer.File ds ds5 ->
                                   case ds5 of wild3 { GHC.Conc.Sync.TVar tvar# ->
                                   case GHC.Prim.writeTVar#
                                          @ GHC.Prim.RealWorld
                                          @ [GHC.Types.Int]
                                          tvar#
                                          (case Data.OldList.$winsertBy
                                                  @ GHC.Types.Int
                                                  GHC.Classes.compareInt
                                                  w1
                                                  ipv3 of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Types.: @ GHC.Types.Int ww2 ww3 })
                                          eta of s2# { DEFAULT ->
                                   (# s2#, GHC.Tuple.() #) } } })
                                  ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                           FileServer.addClientToTxt1 w w1 ipv8 } } }
                        GHC.Types.True
                        -> GHC.Prim.atomically#
                             @ ()
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case aFile of wild2 { FileServer.File ds ds3 ->
                              case ds of wild3 { GHC.Conc.Sync.TVar tvar# ->
                              case GHC.Prim.readTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#
                                     eta of ds4 { (#,#) ipv4 ipv5 ->
                              case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     tvar#
                                     (case ipv5 of wild4 { GHC.Types.I# y ->
                                      GHC.Types.I# (GHC.Prim.+# 1# y) })
                                     ipv4 of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } } })
                             ipv2 } } } }) -}
55bfb082d46c148e9a27d329bd718bfd
  $wopenFileandSend ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S,U><S,U><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.Handle.Types.Handle)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.$waddToFileListRead
                        w1
                        ww
                        w2
                        w3 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "fileExist "#
                           (case ipv1 of wild {
                              GHC.Types.False -> GHC.Show.shows18
                              GHC.Types.True -> GHC.Show.shows17 }))
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild {
                   GHC.Types.False
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             FileServer.openFileandSend_reply
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      GHC.IO.Handle.Text.hPutStr2
                        w
                        FileServer.openFileandSend_reply
                        GHC.Types.True
                        ipv4 }
                   GHC.Types.True
                   -> case GHC.IO.Handle.FD.openFile1
                             w1
                             GHC.IO.IOMode.ReadMode
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.IO.Handle.Text.hGetContents1
                             ipv5
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      GHC.IO.Handle.Text.hPutStr2
                        w
                        (GHC.Base.++ @ GHC.Types.Char ipv7 FileServer.openFileandSend2)
                        GHC.Types.True
                        ipv6 } } } } }) -}
503ba195ea40dcc1de530130ab40aaeb
  $wopenFileandSend' ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.connectTo1
                        FileServer.openFileandSend'4
                        (Network.PortNumber
                           (case w of wild { GHC.Types.I# i ->
                            case {__pkg_ccall network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz htons GHC.Prim.Word#
                                                                                                           -> GHC.Prim.State#
                                                                                                                GHC.Prim.RealWorld
                                                                                                           -> (# GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                 GHC.Prim.Word# #)}
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# i))
                                   GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                            (GHC.Word.W16# (GHC.Prim.narrow16Word# ds1))
                              `cast`
                            (Sym (Network.Socket.Types.N:PortNumber[0])) } }))
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        FileServer.openFileandSend'3
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        ipv1
                        (GHC.CString.unpackAppendCString# "UPDATE "# w1)
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 FileServer.openFileandSend'2 ipv1 w1 ipv4 } } }) -}
b9a37c64beef5b992a7c4b3109d6cb49
  $wpopulateList ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U><S,U>, Inline: [0] -}
0805fc7ecf53539f1ffade14c5b310ed
  $wremoveClientfromCacheList ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Int)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ ()
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                      GHC.Base.Nothing
                      -> case FileServer.removeClientfromCacheList3
                         ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                         of {}
                      GHC.Base.Just aFile
                      -> case aFile of wild1 { FileServer.File ds ds2 ->
                         case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ [GHC.Types.Int]
                                tvar#
                                ipv of ds3 { (#,#) ipv2 ipv3 ->
                         case GHC.List.elem
                                @ GHC.Types.Int
                                GHC.Classes.$fEqInt
                                w1
                                ipv3 of wild3 {
                           GHC.Types.False
                           -> case FileServer.removeClientfromCacheList2
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              of {}
                           GHC.Types.True
                           -> case GHC.Prim.writeTVar#
                                     @ GHC.Prim.RealWorld
                                     @ [GHC.Types.Int]
                                     tvar#
                                     (Data.OldList.deleteBy
                                        @ GHC.Types.Int
                                        GHC.Classes.eqInt
                                        w1
                                        ipv3)
                                     ipv2 of s2# { DEFAULT ->
                              (# s2#, GHC.Tuple.() #) } } } } } } })
                   w2) -}
4bd9613b206aeac85c479c159f6a58d4
  $wrunConn ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U(U)><S,U>, Inline: [0] -}
15f13cb20fb495010224469cc837879a
  $wupdateClientCache ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><S,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           ww
                           eta)
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.$slookup1 @ FileServer.File w ipv1 of wild {
                   GHC.Base.Nothing
                   -> case FileServer.updateClientCache2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   GHC.Base.Just aFile
                   -> case GHC.Prim.atomically#
                             @ [GHC.Types.Int]
                             (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case aFile of wild1 { FileServer.File ds ds2 ->
                              case ds2 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                              GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ [GHC.Types.Int]
                                tvar#
                                eta } })
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      let {
                        oldCaches :: [GHC.Types.Int]
                        = Data.OldList.deleteBy @ GHC.Types.Int GHC.Classes.eqInt w1 ipv3
                      } in
                      case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.Show.$fShow[]_$s$cshow oldCaches)
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      letrec {
                        go :: [GHC.Types.Int]
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 2, Strictness: <S,1*U><S,U> -}
                        = \ (ds :: [GHC.Types.Int])
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds of wild1 {
                            [] -> (# eta, GHC.Tuple.() #)
                            : y ys
                            -> case FileServer.$wopenFileandSend'
                                      y
                                      w
                                      eta of ds4 { (#,#) ipv6 ipv7 ->
                               go ys ipv6 } }
                      } in
                      go oldCaches ipv4 } } } }) -}
5433f3c7a7c10ecd6942e65d5205970e
  $wwriteFileList ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Data.Map.Base.Map GHC.Base.String FileServer.File)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <S,U><L,1*U><L,U(U)><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int)
                   (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Data.Map.Base.Map GHC.Base.String FileServer.File))
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileServer.$waddToFileListWrite
                        w
                        ww
                        w2
                        w3 of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.writeFileList2 w w1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case FileServer.$wupdateClientCache
                        ww
                        w
                        w2
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
b3d9182a85714971eb7782425dec6651
  type CachedBy = GHC.Conc.Sync.TVar [GHC.Types.Int]
1901a822e189cfee028f6bbc7f0a5b7e
  data File
    = File {fileVersion :: GHC.Conc.Sync.TVar GHC.Types.Int,
            cachedBy :: FileServer.CachedBy}
19aff19db74782fef7f1c51cae1a4b48
  type FileList =
    GHC.Conc.Sync.TVar
      (Data.Map.Base.Map GHC.Base.String FileServer.File)
175bf5c48ae83eaadf7ad0fa16d6e4de
  add :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True) GHC.Num.$fNumInt_$c+ -}
ca00e38f0a87b0ee7bbd6f1be7afefde
  addClientToTxt ::
    GHC.Base.String -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addClientToTxt1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ed3375dc874f6d64de0abb2d4554159e
  addClientToTxt1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>,
     Unfolding: (\ (fileName :: GHC.Base.String)
                   (port :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        FileServer.addClientToTxt3
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.addClientToTxt2
                        ipv1
                        fileName
                        port
                        (GHC.Types.[] @ GHC.Types.Char)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 System.IO.writeFile1 FileServer.addClientToTxt3 ipv3 ipv4 } } }) -}
47df3baaa5561e5b603f4b2e967fb3d0
  addClientToTxt2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 5, Strictness: <S,U><L,U><L,U(U)><L,U><S,U> -}
cf63116c5e232b69be6e6e91bd82a077
  addClientToTxt3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "init/files.txt"#) -}
97d6e3259624fe8078b02571ca6657a7
  addToFileListRead ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 5, Strictness: <L,A><S,U><S(S),1*U(U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListRead1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
d710c2199398d6eae97f715fb1cf6cec
  addToFileListRead1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 5, Strictness: <L,A><S,U><S(S),1*U(U)><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$waddToFileListRead w1 ww1 w3 w4 }) -}
7b514c9d7f044769fa8d65f8e084b096
  addToFileListRead2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "returning True"#) -}
0e8159e9ffa23236d7febac538c92ce6
  addToFileListRead3 :: GHC.Types.IO GHC.Prim.Any
  {- Strictness: x -}
9edbc4ed8fbabe1b5c3c982b071b4dfb
  addToFileListWrite ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,A><S,U><S(S),U(U)><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListWrite1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cd19322f19f90dd677d97c18a24e0538
  addToFileListWrite1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,A><S,U><S(S),U(U)><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$waddToFileListWrite w1 ww1 w3 w4 }) -}
a3df187a9d4309e1be0306443116d6bc
  addToFileListWrite2 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U)><S,U>,
     Unfolding: (\ (fileName :: GHC.Base.String)
                   (port :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        FileServer.addClientToTxt3
                        GHC.IO.IOMode.AppendMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        ipv1
                        (GHC.Base.++
                           @ GHC.Types.Char
                           fileName
                           (GHC.CString.unpackAppendCString#
                              " 0 "#
                              (case port of ww2 { GHC.Types.I# ww3 ->
                               case GHC.Show.$wshowSignedInt
                                      0#
                                      ww3
                                      (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                               GHC.Types.: @ GHC.Types.Char ww5 ww6 } })))
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.hClose1 ipv1 ipv2 } }) -}
6e532c2128fe79098c934a43186bc5b3
  addToFileListWrite3 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.File #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (fileName :: GHC.Base.String)
                   (clientPort :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ [GHC.Types.Int]
                        @ GHC.Prim.RealWorld
                        (GHC.Types.:
                           @ GHC.Types.Int
                           clientPort
                           (GHC.Types.[] @ GHC.Types.Int))
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        FileServer.addToFileListWrite4
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    FileServer.File
                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv3)
                      (GHC.Conc.Sync.TVar @ [GHC.Types.Int] ipv1) #) } }) -}
ab06b3b91c45b89f6dac1e1e23b2c1f0
  addToFileListWrite4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
3119f1d817fcb242abf3bd6392a41b0d
  cachedBy :: FileServer.File -> FileServer.CachedBy
  RecSel Left FileServer.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: FileServer.File) ->
                 case ds of wild { FileServer.File ds1 ds2 -> ds2 }) -}
35e957e029f3207763d6e8a4e319a529
  checkVer ::
    GHC.Base.String
    -> FileServer.FileList -> GHC.Types.IO GHC.Types.Int
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.checkVer1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
9d93bb244453256b4f4147375730bf9b
  checkVer1 ::
    GHC.Base.String
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (fileName :: GHC.Base.String)
                   (fileList :: FileServer.FileList)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ GHC.Types.Int
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case fileList of wild { GHC.Conc.Sync.TVar tvar# ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                           tvar#
                           s of ds1 { (#,#) ipv ipv1 ->
                    case FileServer.$slookup1
                           @ FileServer.File
                           fileName
                           ipv1 of wild1 {
                      GHC.Base.Nothing -> (# ipv, FileServer.addToFileListWrite4 #)
                      GHC.Base.Just aFile
                      -> case aFile of wild2 { FileServer.File ds ds2 ->
                         case ds of wild3 { GHC.Conc.Sync.TVar tvar#1 ->
                         GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ GHC.Types.Int
                           tvar#1
                           ipv } } } } })
                   eta) -}
782f4e4998ff0e9388e350dbb412960e
  createTxtForInit ::
    GHC.Base.String -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListWrite2
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a503a33e0ef9a29179a422e5a646e96b
  fileVersion :: FileServer.File -> GHC.Conc.Sync.TVar GHC.Types.Int
  RecSel Left FileServer.File
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: FileServer.File) ->
                 case ds of wild { FileServer.File ds1 ds2 -> ds1 }) -}
022e861c58e85902498b9e08240a62fd
  initServer :: FileServer.FileList -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.initServer1
                  `cast`
                (<FileServer.FileList>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
26bdc08effb7964df9dcee4face52f9a
  initServer1 ::
    FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><S,U>,
     Unfolding: (\ (fileList :: FileServer.FileList)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        FileServer.addClientToTxt3
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.initServer2
                        ipv1
                        fileList
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.hClose1 ipv1 ipv2 } }) -}
14495f8abeeaeec5f40f25482b867591
  initServer2 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U(U)><S,U> -}
048547e392e598a1faed38cd0c090c1e
  newFile ::
    GHC.Base.String
    -> GHC.Types.Int -> GHC.Conc.Sync.STM FileServer.File
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.addToFileListWrite3
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <FileServer.File>_R)) -}
31892eeae6ae2d64379c65826d5e92c2
  newFile' ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Conc.Sync.STM FileServer.File
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newFile'1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <FileServer.File>_R)) -}
1a83bdf3ef5e214354834d5ab82b8b85
  newFile'1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, FileServer.File #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (fileName :: GHC.Base.String)
                   (clientPort :: GHC.Types.Int)
                   (vers :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ [GHC.Types.Int]
                        @ GHC.Prim.RealWorld
                        (GHC.Types.:
                           @ GHC.Types.Int
                           clientPort
                           (GHC.Types.[] @ GHC.Types.Int))
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        vers
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    FileServer.File
                      (GHC.Conc.Sync.TVar @ GHC.Types.Int ipv3)
                      (GHC.Conc.Sync.TVar @ [GHC.Types.Int] ipv1) #) } }) -}
1ecf4f4250367394aee1c1a473e55f75
  newServer :: GHC.Types.IO FileServer.FileList
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.newServer1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Base.String FileServer.File)>_R)) -}
a3798c9b6b47de017e9127081c6b152c
  newServer1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar
            (Data.Map.Base.Map GHC.Base.String FileServer.File) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1# :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Base.String @ FileServer.File)
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Conc.Sync.TVar
                      @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                      ipv1 #) }) -}
8556c622a2a2dfa7f443cab12804b5b1
  openFileandSend ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,U><S(S),1*U(U)><S,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openFileandSend1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
53ce9c2463d34907d57e42ca4d4e4806
  openFileandSend' ::
    GHC.Types.Int
    -> FileServer.FileList -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U)><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openFileandSend'1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b169ecc1fe12005be3d1a7c62a20e8d3
  openFileandSend'1 ::
    GHC.Types.Int
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,A><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 FileServer.$wopenFileandSend' w w2 w3) -}
8efde557ff1cc1b06067f4989ac08f68
  openFileandSend'2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><L,U><S,U> -}
68053c94e50d79785b071524ef55e6a0
  openFileandSend'3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "updating client cache"#) -}
ed2577f79d6de27572b47ff01133ee73
  openFileandSend'4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "localhost"#) -}
e389087866909e5c364c2427d7010408
  openFileandSend1 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><S(S),1*U(U)><S,U><L,U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wopenFileandSend w ww1 w2 w3 w4 }) -}
e813c209875b1343950e5c423c6bc3fc
  openFileandSend2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!EOF!"#) -}
0ff77568b389aa907b627d9993be1b61
  openFileandSend_reply :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "That file does not exist"#) -}
dea9a3358ce46d4f4c48e7be6840b8b6
  openSocket :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openSocket1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b69fdc7c4e31f52d50dab765c78015d4
  openSocket1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: (\ (portNum :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.listenOn1
                        (Network.PortNumber
                           (case portNum of wild { GHC.Types.I# i ->
                            case {__pkg_ccall network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz htons GHC.Prim.Word#
                                                                                                           -> GHC.Prim.State#
                                                                                                                GHC.Prim.RealWorld
                                                                                                           -> (# GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                 GHC.Prim.Word# #)}
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# i))
                                   GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                            (GHC.Word.W16# (GHC.Prim.narrow16Word# ds1))
                              `cast`
                            (Sym (Network.Socket.Types.N:PortNumber[0])) } }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.fork#
                        @ (GHC.Types.IO ())
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.catch#
                           @ ()
                           @ GHC.Exception.SomeException
                           (FileServer.openSocket4 ipv1)
                           GHC.Conc.Sync.childHandler1
                           eta)
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Base.String @ FileServer.File)
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 let {
                   fileList :: FileServer.FileList {- Strictness: m -}
                   = GHC.Conc.Sync.TVar
                       @ (Data.Map.Base.Map GHC.Base.String FileServer.File)
                       ipv5
                 } in
                 case FileServer.initServer1
                        fileList
                        ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        FileServer.openSocket3
                        GHC.Types.True
                        ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                 letrec {
                   a' :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ipv1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                     case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                     case Network.$waccept
                            ww1
                            ww2
                            ww3
                            ww4
                            ww7
                            s1 of ds5 { (#,#) ipv10 ipv11 ->
                     case ipv11 of wild { (,,) handle host port ->
                     case GHC.IO.Handle.Text.hPutStr2
                            GHC.IO.Handle.FD.stdout
                            (GHC.CString.unpackAppendCString#
                               "Connection accepted: "#
                               (GHC.Base.++ @ GHC.Types.Char host FileServer.openSocket2))
                            GHC.Types.True
                            ipv10 of ds6 { (#,#) ipv12 ipv13 ->
                     case Control.Concurrent.forkFinally1
                            @ ()
                            (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             FileServer.$wrunConn handle fileList w)
                              `cast`
                            (Sym (GHC.Types.N:IO[0] <()>_R))
                            (\ (ds7 :: Data.Either.Either GHC.Exception.SomeException ())
                               (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             GHC.IO.Handle.hClose1 handle eta)
                              `cast`
                            (<Data.Either.Either GHC.Exception.SomeException ()>_R
                             ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                            ipv12 of ds7 { (#,#) ipv14 ipv15 ->
                     a' ipv14 } } } } } }
                 } in
                 a' ipv8 } } } } }) -}
bc4affb7534f1322e61310e9206625d7
  openSocket2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
eb0f1335b522837ed1ae51679afd8125
  openSocket3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Waiting for connections\n"#) -}
3540c16882cdca4fea81ca90ee92ad3a
  openSocket4 ::
    Network.Socket.Types.Socket
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U(U),A,A,A,1*U(U))><S,U> -}
71c89e3f3db817d7fefd68efb51b27c6
  populateList ::
    FileServer.FileList -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <S(S),U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.populateList1
                  `cast`
                (<FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
163a88e851cc4d7c7f8d2667f81ae239
  populateList1 ::
    FileServer.FileList
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S(S),U(U)><L,U><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: FileServer.FileList)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wpopulateList ww1 w1 w2 }) -}
f39b85e2e6809f1ac655abca7dd1cebd
  readytoclose :: Network.Socket.Types.Socket -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U(U),A,A,A,1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.openSocket4
                  `cast`
                (<Network.Socket.Types.Socket>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a8717ed019b6a1fe59c9daa2f3f5ae22
  removeClientToTxt ::
    GHC.Base.String -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.removeClientToTxt1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ab1b4e7d9bae625dfd52cc2b23c21a8e
  removeClientToTxt1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>,
     Unfolding: (\ (fileName :: GHC.Base.String)
                   (port :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        FileServer.addClientToTxt3
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case FileServer.removeClientToTxt2
                        ipv1
                        fileName
                        port
                        (GHC.Types.[] @ GHC.Types.Char)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.hClose1 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 System.IO.writeFile1 FileServer.addClientToTxt3 ipv3 ipv4 } } }) -}
437b0671a189dc7f1b42793eda546e60
  removeClientToTxt2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 5, Strictness: <S,U><L,U><L,U(U)><L,U><S,U> -}
7c7add10227c28365a51c3fa9eaf18a0
  removeClientfromCacheList ::
    GHC.Base.String
    -> GHC.Types.Int -> FileServer.FileList -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,1*U><L,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.removeClientfromCacheList1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5abf00f8e65eb3f399c2aab2e43a88bd
  removeClientfromCacheList1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><L,U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Int)
                   (w2 :: FileServer.FileList)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wremoveClientfromCacheList w w1 ww1 w3 }) -}
a91f018befd3a3261bc7b5e0815077a0
  removeClientfromCacheList2 :: GHC.Conc.Sync.STM ()
  {- Strictness: x -}
e68f2eb734a884e5e4ef4a27cfbec161
  removeClientfromCacheList3 :: GHC.Conc.Sync.STM ()
  {- Strictness: x -}
aa52b147b25db933f6e5d9623f464b67
  runConn ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.runConn1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <FileServer.FileList>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
8504956adc5d7c3e36fa5e5dde1af856
  runConn1 ::
    GHC.IO.Handle.Types.Handle
    -> FileServer.FileList
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,U><L,U(U)><L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: FileServer.FileList)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 FileServer.$wrunConn w w1 w3) -}
f415c95a68952ae05c9e0057ccf777c3
  updateClientCache ::
    FileServer.FileList
    -> GHC.Base.String -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S(S),1*U(U)><S,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.updateClientCache1
                  `cast`
                (<FileServer.FileList>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d0070ae8719d7c8cd7c10136b808384c
  updateClientCache1 ::
    FileServer.FileList
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S(S),1*U(U)><S,U><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: FileServer.FileList)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wupdateClientCache ww1 w1 w2 w3 }) -}
8b0f7454bf366365a667f44a64e7725b
  updateClientCache2 :: GHC.Types.IO ()
  {- Strictness: x -}
c5417a7a49830af4843135b81361e6a5
  writeFileList ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> FileServer.FileList
    -> GHC.Types.IO ()
  {- Arity: 6, Strictness: <L,A><S,U><L,1*U><L,U(U)><S(S),U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.writeFileList1
                  `cast`
                (<GHC.IO.Handle.Types.Handle>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <FileServer.FileList>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
aa722bdfcc986fd191fd867f6f5e86ce
  writeFileList1 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> FileServer.FileList
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,A><S,U><L,1*U><L,U(U)><S(S),U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ (w :: GHC.IO.Handle.Types.Handle)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.Types.Int)
                   (w4 :: FileServer.FileList)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w4 of ww { GHC.Conc.Sync.TVar ww1 ->
                 FileServer.$wwriteFileList w1 w2 w3 ww1 w5 }) -}
360451027799e3a7ae3e1d123daa9823
  writeFileList2 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U><S,U>,
     Unfolding: (\ (fileName :: GHC.Base.String)
                   (toWrite :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        fileName
                        GHC.IO.IOMode.WriteMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        ipv1
                        toWrite
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.hClose1 ipv1 ipv2 } }) -}
3cb128de38df1497557a3f0d7b061443
  writeFileandClose ::
    GHC.Base.String -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                FileServer.writeFileList2
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
"SPEC/FileServer read @ Int" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                          GHC.Types.Int)
  Text.Read.read @ GHC.Types.Int $dRead = FileServer.$sread
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

